doctype html
html
  head
    title Quản lý thiết bị phòng thực hành
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css')
  body
    nav.navbar.navbar-expand-lg.navbar-light.bg-primary
      .container-fluid
        a.navbar-brand(href='/')
          img(src='asset/Logo_IUH.png', alt='Logo', style='max-height: 40px; margin-right: 10px;')
          span(style='color: white') Quản lý thiết bị phòng thực hành   
    .container.mt-5
      h1.text-center.mt-5 Phòng thực hành X7.16 
      .text-center
        button#start-camera.btn.btn-primary Mở camara
      .mt-4.text-center
        img#camera-stream(
          src='',
          alt='Waiting for camera...',
          style='max-width: 100%; border: 1px solid #ccc;'
        )
        
      h1.text-center.mb-4 Danh sách thiết bị
      if devices && devices.length > 0
        // Bảng các thiết bị bình thường
        h2 Thiết bị hiện tại
        table.table.table-bordered
          thead
            tr
              th Tên thiết bị
              th Số lượng
              th Thời gian kiểm tra
          tbody#device-list
            each device in devices
              if !device.missing
                tr
                  td= device.name
                  td= device.quantity
                  td= new Date(device.checkedAt).toLocaleString()

        // Bảng các vật phẩm bị mất
        h2 Thiết bị không tìm thấy
        table.table.table-bordered
          thead
            tr
              th Tên thiết bị
              th Số lượng
              th Thời gian kiểm tra
          tbody#missing-list
            each device in devices
              if device.missing
                tr
                  td= device.name
                  td= device.quantity
                  td= new Date(device.checkedAt).toLocaleString()
      else
        p.text-center.text-muted Chưa có lịch sử tìm kiếm.
       
      .text-center.mt-4
        button#checking.btn.btn-primary Checking
    
      script(src="/socket.io/socket.io.js")
      script.
        const socket = io();
        document.getElementById('checking').addEventListener('click', () => {
          socket.emit('checking');
        });

        socket.on('ml_response', (data) => {
          const deviceList = document.getElementById('device-list');
          const missingList = document.getElementById('missing-list');
          deviceList.innerHTML = ''; 
          missingList.innerHTML = '';
          if (data.devices && data.devices.length > 0) {
            data.devices.forEach(device => {
              const rowHtml = `
                <td>${device.name}</td>
                <td>${device.quantity}</td>
                <td>${new Date(device.checkedAt).toLocaleString()}</td>
              `;
              if (device.missing) {
                missingList.innerHTML += `<tr>${rowHtml}</tr>`;
              } else {
                deviceList.innerHTML += `<tr>${rowHtml}</tr>`;
              }
            });
          }
        });

        // Start camera stream
        document.getElementById('start-camera').addEventListener('click', () => {
          socket.emit('start_camera');
        });

        // Receive and display camera frame
        socket.on('camera_frame', (data) => {
          const imgElement = document.getElementById('camera-stream');
          imgElement.src = `data:image/jpeg;base64,${data.frame}`;
        });

        // Handle camera errors
        socket.on('camera_error', (data) => {
          alert(data.message);
        });
